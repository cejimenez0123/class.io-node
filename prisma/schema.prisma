// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  email String @unique
  password String
  educator Boolean
  lastActive DateTime
  topics UserTopic[]
  quizes UserQuiz[]
  answers UserAnswer[]
  created DateTime @default(now())
}


model UserTopic {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  user User    @relation(fields: [userId], references: [id])
  userId     String @db.ObjectId
  topic   Topic @relation(fields: [topicId], references: [id])
  topicId String @db.ObjectId
}

model Topic{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  users UserTopic[]
  questions Question[]
  quizes Quiz[]

}
model UserQuiz {
      id String @id @default(auto()) @map("_id") @db.ObjectId
      user User    @relation(fields: [userId], references: [id])
      userId     String @db.ObjectId
      quiz Quiz    @relation(fields: [quizId], references: [id])
      quizId     String @db.ObjectId
      created DateTime @default(now())
}
model UserAnswer{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  question Question   @relation(fields: [questionId], references: [id])
  questionId     String @db.ObjectId
  choice String
  user User    @relation(fields: [userId], references: [id])
      userId     String @db.ObjectId

}
model Quiz {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    users UserQuiz[]
    topic Topic   @relation(fields: [topicId], references: [id])
    topicId String @db.ObjectId
    questions QuizQuestion[]
    created DateTime @default(now())
    
}
model Answer {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  content String
  question Question   @relation(fields: [questionId], references: [id])
  questionId     String @db.ObjectId
}
model QuizQuestion {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  quiz Quiz    @relation(fields: [quizId], references: [id])
  quizId     String @db.ObjectId
  question Question   @relation(fields: [questionId], references: [id])
  questionId     String @db.ObjectId
}
model Question{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  topic   Topic @relation(fields: [topicId], references: [id])
  topicId String @db.ObjectId
  content String
  difficulty Int?
  correctAnswer String
  quizes QuizQuestion[]
  answers Answer[] 
  
  userAnswers UserAnswer[]
  
}